{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","placeholder","value","onChange","event","console","log","target","backgroundColor","rows","newText","toUpperCase","showAlert","newtext","toLowerCase","copyText","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","split","length","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","propsTypes","PropTypes","string","isRequired","abouText","defaultProps","App","setmode","_useState3","_useState4","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.ab1836e2.chunk.js","sourcesContent":["\r\nimport PropTypes from 'prop-types';\r\n// import { Link } from 'react-router-dom';\r\nimport React from 'react';\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\"><li className=\"nav-link\">Home</li></ul>\r\n\r\n\r\n        {/* <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/about\">{props.abouText}</Link>\r\n          </li> */}\r\n          {/* <li className=\"nav-item dropdown\">\r\n            <Link className=\"nav-link dropdown-toggle\" to=\"/\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n              Dropdown\r\n            </Link>\r\n            {/* <ul className=\"dropdown-menu\">\r\n              <li><Link className=\"dropdown-item\" to=\"/\">Action</Link></li>\r\n              <li><Link className=\"dropdown-item\" to=\"/\">Another action</Link></li>\r\n              <li><hr className=\"dropdown-divider\"/></li>\r\n              <li><Link className=\"dropdown-item\" to=\"/\">Something else here</Link></li>\r\n            </ul> */}\r\n          {/* </li> */} \r\n          {/* <li className=\"nav-item\">\r\n            <Link className=\"nav-link disabled\" to='/'>Disabled</Link>\r\n          </li> */}\r\n        {/* </ul> */}\r\n        {/* <form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n        </form> */}\r\n        <div className={`form-check form-switch text-${props.mode==='dark'?'light':'dark'}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode}  id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n</div>\r\n\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\n\r\nNavbar.propsTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    abouText: PropTypes.string\r\n};\r\n// Navbar.propTypes ={\r\n//     title: PropTypes.string.isRequired,\r\n//     abouText: PropTypes.string\r\n// }\r\nNavbar.defaultProps = {\r\n    title: 'Enter title here',\r\n    abouText:'enter about text'\r\n};","import React, {useState} from 'react'\r\n// import PropTypes from 'prop-types';\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        console.log(\"Uppercase was clicked \"  + text)\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Text changed to Upper case\", \"success\");\r\n    }\r\n    const handleDownClick = () =>{\r\n        console.log(\"Lowercase was Clicked \" + text)\r\n        let newtext = text.toLowerCase();\r\n        setText(newtext)\r\n        props.showAlert(\"Text changed to Lower case\", \"success\");\r\n    }\r\n    const handleClear = () =>{\r\n        let newText =\"\"\r\n        setText(newText)\r\n        props.showAlert(\"Text is Cleared\", \"success\");\r\n    }\r\n    const handleonChange =(event)=>{\r\n        console.log(\"On change\")\r\n        setText(event.target.value)\r\n        \r\n    }\r\n   \r\n   \r\n    const [text, setText] = useState('');\r\n    // setText(\"bIaIGdc\");\r\n    const handleCopy =() =>{\r\n        const copyText = document.getElementById(\"exampleFormControlTextarea1\");\r\n        copyText.select();\r\n        copyText.setSelectionRange(0, 99999);\r\n        navigator.clipboard.writeText(copyText.value);\r\n        // alert('copied the text:' + copyText.value)\r\n        props.showAlert(\"Copied the Text\", \"success\");\r\n    }\r\n  return (\r\n    <>\r\n    <div className='container'style={{color: props.mode==='dark'?'white':'black'}} >\r\n        \r\n<div className=\"mb-3\">\r\n    <h1>{props.heading}</h1>\r\n \r\n  <textarea className=\"form-control\" placeholder='Enter text here' id=\"exampleFormControlTextarea1\" value={text} onChange={handleonChange} style={{backgroundColor: props.mode==='dark'?'#570A57':'white',color: props.mode==='dark'?'white':'black'}}  rows=\"8\"></textarea>\r\n</div>\r\n<button className=\"btn btn-primary \" onClick={handleUpClick}> UpperCase</button>\r\n<button className=\"btn btn-primary mx-1\" onClick={handleDownClick}>LowerCase</button>\r\n<button className=\"btn btn-primary mx-1\" onClick={handleClear}>Clear</button>\r\n<button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy</button>\r\n    </div>\r\n    <div className=\"container my-4\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n        <h2>Your text summary</h2>\r\n        <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n        <p>{0.008*text.split(\" \").length} Minutes read</p>\r\n        <h2>Preview</h2>\r\n        \r\n        <p>{text.length>0?text:\"Enter something to prevew it here\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n// import PropTypes from 'prop-types';\r\nexport default function Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n   props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n {capitalize(props.alert.type)}<strong>: {props.alert.msg}</strong> \r\n  \r\n</div>\r\n  )\r\n}\r\n","\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport React,{useState} from 'react';\nimport TextForm from './components/TextForm';\n// import About  from './components/About';\nimport Alert from './components/Alert'\n// import {BrowserRouter as Router, Routes, Route,} from \"react-router-dom\";\n\n\nfunction App() {\nconst [mode, setmode] = useState('light');\nconst [alert, setAlert] = useState(null)\n\nconst showAlert =(message, type)=>{\nsetAlert({\n  msg: message,\n  type:type\n})\nsetTimeout(() => {\n  setAlert(null);\n}, 1500);\n}\nconst toggleMode =()=>{\n  if(mode=== 'light'){\n    setmode('dark')\n    document.body.style.backgroundColor = '#2E0249';\n    showAlert(\"Dark Mode has been enabled\", \"success\");\n    \n  }else{\n    setmode('light')\n    document.body.style.backgroundColor = 'white';\n   showAlert(\"Light Mode has been enabled\", \"success\")\n  }\n}\n\n  return (\n    <>\n    {/* <Router> */}\n <Navbar title=\"TextUtils\" abouText=\"About TextUtils\" mode={mode} toggleMode={toggleMode}/>\n {/* <Navbar/> */}\n <Alert alert={alert}/>\n <div className=\"container my-3\">\n  {/* <Routes> */}\n    {/* <Route path=\"/about\" element={<About/>}/> */}\n    {/* <Route path='/' element={<TextForm heading=\"Enter the text to analyze\" showAlert={showAlert} mode={mode}/>}/> */}\n    <TextForm heading=\"Enter the text to analyze\" showAlert={showAlert} mode={mode}/>\n  {/* </Routes> */}\n \n </div>\n {/* </Router> */}\n    </>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}